RenderDoc可以调试渲染

提示等级
    0 无提示
    1 简单提示
    2 复杂提示

团队功能--功能域 ：创建区域独立的团队规则，比如PVP，磁铁开关。

要保证狂野工艺在没野性物流的情况下工作。
产魔器能主动输出，耗魔器能主动抽取。
魔简添加配置复制程序处理，在副手时，主手方块设备放置时自动使用配置。
均使用懒惰模式
野性物流默认勤奋模式。
水晶底座的图案可以由中文名转化为颜色表而来，这种需要左上角一个黑色块，以及一条颜色表来标识，无黑色块的是自定义图案。


狂野工艺：
核力魔能装置
	铀基燃料，钍基燃料，氢基燃料，氦基燃料
燃料魔能装置
	消耗燃料
辐射魔能装置
	宇宙辐射，太阳能
环境魔能收集器
	从环境中收集魔能，根据生物群系和区块机器数量调整效率。
材料
    黄铜，塑料，强化塑料，用作设备外壳。
    中级导魔金属==金。
	高级导魔金属（紫色的金，暂叫玄金）
魔能合成台
	消耗魔能合成物品，只能合成瞬间合成和不超过需求的储存能量的东西
高级魔能合成台
	消耗大量魔能合成高级物品，多方块结构
	两种合成台使用相同的合成表，利用普通的只有9格，和能量储存来区分
    加速升级
	    给机器加速度(叫增压升级)
    并行效率升级
        并行数*合成时间*根号2，3，4
一些专用机器，比魔能合成台更省魔能和材料
分子结晶器
    分子级打印！
幽灵
	可以穿墙
	友好幽灵和迷失（走火入魔）幽灵
	友好幽灵能交易,能指挥做简单事情，不愿意当黑奴
	能驯服，驯服后设置跟随能加载区块，防止意外丢失
	机器幽灵没有工作限制
猫娘
    可以信任，不可驯服
    可交易
    会召唤幽灵
幽灵基站：
	用于召唤和自动化工具幽灵，在基座上设置幽灵在哪里用什么法术，和物品配置。幽灵挂了后扣法力自动重生。幽灵需要的物品和法力由基座给。
    可以设置术式施放时间线，使幽灵按照时间线执行多种法术。
    术式执行延迟可以选择开始执行后，执行完成后，延迟可选时间执行下一条术式。
    可加载区块
施法水晶
	与幽灵基座相似，但不能设置施法位置，施法位置就是自己。
	技术上需要考虑谁用模拟玩家，或者两者都用。
	特定专精版本
	可加载区块
自动化专用术式
	比如移动到哪里。
技术
	施法上下文接口，实现于玩家，实体，方块实体等，用于提供术式需要的上下文比如坐标，施法者等，如果不能给原版类实现接口，可以考虑术式类上安排各种情况下的重载。
灵魂
	装了灵魂的灵魂水晶叫灵魂。id强迫症完美方案，太棒了。
区块加载器
	没啥好说的
定制化武器装备：
	通常作为boss奖品，不可自定义，或者限制自定义。
首雷蛋
脚雷（地雷）
    初始为方块，需要坚固上表面
    用下方方块的挖掘工具右键后变为实体，陷入方块里面
小樱涂装锤子
火药枪
    非法师使用的武器
    1191 三管 p90 拉大栓 要魔改
电弹枪
    用电，不用抛壳，法师用自动充电（直接扣蓝）
魔能枪
    非法师必须带“电池”使用



野性装饰：
电视机
原木椅子（躺）


野性物流：
库存管理器
库存公开端口
库存资源端口
样板代理器
存起假物品的实例重复使用
锁定列表时新加物品在之后
假槽用真假槽而不是真槽？
储物频道 超立方 升级模式(撤下频道变为物品，然后拿去合成)
迷你仓库 升级模式 谨慎考虑类型上限以防止nbt爆炸 或考虑频道模式
储物频道升级(升级槽受超立方等级影响)
    升级运作时耗能！
    水生成升级，初始两桶水，每水流动时间将当前水加倍。
    石生成升级，根据频道内岩浆、灵魂土、蓝冰存量，每岩浆流动时间生成等量圆石、石头、玄武岩（？）。
    岩浆生成升级，根据岩浆、滴水石块、滴水石尖的存量，每60秒生成？1B*x岩浆。
    种植园升级，根据种植园升级专用合成表生产农作物，能自定义并行上限以免耗光魔能。可以添加多个。
    拆包解包升级
线式数值显示，减少遮挡。类似耐久条，条后方用点格代表单位。
仓管物品app，提供弹药，补充物品，自动存物。
storage_hypercube
hive_storage_hypercube


关于兼容：
大佬的回答 [
参考jei/rei/emi/nei/aei等模组的plugin
常见的就是用注解 + 反射
需要注意的就一点，你的 mod 不装就不触发类加载
https://github.com/joe-vettek/Fluid-Drawers-Legacy/tree/forge-1.20.x/src/main/java/xueluoanping/fluiddrawerslegacy/api/exchange
首先Capability的数据持久化不归你管,归Forge管,其次CapabilityProvider才是数据持久化的实现者
]
由我处理registerCapabilitiesEvent


Mod加载事件顺序
construct
registry
config
common setup
sided setup
imc
complete